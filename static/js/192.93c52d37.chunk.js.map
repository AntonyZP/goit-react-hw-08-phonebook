{"version":3,"file":"static/js/192.93c52d37.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectContactsFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\n// export const selectError = state => state.contacts.error;\n\n// export const selectAllContacts = state => state.contacts.items;\n// export const selectLoading = state => state.contacts.loading;\n// export const selectFilter = state => state.filter;\n","import styled from '@emotion/styled'\n\nexport const ContactWrapper = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding-bottom:20px;\n`;\n\nexport const ContactName = styled.p`\nmargin: 0;\nmargin-right: 20px;\nfont-size: 28px;\ntext-shadow: 1px 1px 0px lightgrey;\n`;\n\nexport const ContactNumber = styled.span`\nmargin: 0;\nmargin-left: 150px;\nfont-size: 20px;\ntext-shadow: 1px 1px 0px lightgrey;\n`;\n\n\nexport const DeleteButton = styled.button`\nmargin-top: 20px;\npadding-top: 6px;\npadding-bottom: 6px;\nfont-size: 14px;\ncolor: #ffffff;\nwidth: 100px;\nbackground: #553E3E;\nborder: none;\nborder-radius: 7px;\nbox-shadow: 2px 3px 5px #3d3d3d;\ncursor: pointer;\ntransition: all 100ms ease 0s;\n&:hover,\n&:focus {\n  background: #7D5F49;\n  box-shadow: 2px 7px 7px #7D5F49;;\n`;","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  ContactWrapper,\n  ContactNumber,\n  ContactName,\n  DeleteButton,\n} from 'components/ContactListItem/ContactListItem.styled';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <ContactWrapper key={id}>\n      <ContactName>\n        {name}\n        <ContactNumber>{number}</ContactNumber>\n      </ContactName>\n      <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n    </ContactWrapper>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectContactsFilter } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectContactsFilter).toLowerCase().trim();\n\n  const visibleContacts = contacts\n    .filter(contact => {\n      return contact.name.toLowerCase().includes(filterValue);\n    })\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <ul>\n      {/* {contacts.map(({ name, number, id }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))} */}\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.number,\n  id: PropTypes.string,\n};\n","import styled from '@emotion/styled'\n\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 22px;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 400px;\n  padding: 4px 8px;\n  font-size: 22px;\n  outline: transparent;\n  margin-bottom: 16px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 2px 2px 4px #4d4d4d;\n`;","import { useDispatch } from 'react-redux';\nimport { setContactsFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInputValue = e => {\n    dispatch(setContactsFilter(e.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        onChange={handleInputValue}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n","import styled from '@emotion/styled'\nimport { Form, Field } from 'formik';\n\nexport const FormAdd = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 800px;\n  padding-bottom: 60px;\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 7px;\n  background-color: #c9bfb9;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  color: #010101;\n  text-align: center;\n  font-size: 36px;\n`;\n\nexport const ContactInput = styled(Field)`\n  margin-bottom: 16px;  \n  width: 320px;\n  padding: 4px 8px;\n  border-radius: 5px;\n  box-shadow: 2px 2px 4px #4d4d4d;\n  outline: transparent;\n  border: none;\n  font-size: 22px;\n`;\n\nexport const AddButton = styled.button`\n  margin-top: 20px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  font-size: 18px;\n  color: #ffffff;\n  width: 200px;\n  background: #553E3E;\n  border: none;\n  border-radius: 7px;\n  box-shadow: 2px 3px 5px #3d3d3d;\n  cursor: pointer;\n  transition: all 100ms ease 0s;\n  &:hover,\n  &:focus {\n    background: #7D5F49;\n    box-shadow: 2px 7px 7px #7D5F49;;\n  }\n`;\n\nexport const ErrorNote = styled.div`\n  margin-bottom: 20px;  \n  font-size: 22px;\n  color: red;\n`;","import PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormAdd,\n  Label,\n  AddButton,\n  ContactInput,\n  ErrorNote,\n} from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  const UserSchema = yup.object().shape({\n    name: yup.string().min(1).max(16).required(),\n    number: yup.string().min(5).max(16).required(),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={UserSchema}\n    >\n      {props => (\n        <FormAdd autoComplete=\"off\">\n          <div>\n            <Label>\n              Name\n              <ContactInput\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Tom Riddle\"\n                required\n              />\n              <ErrorNote>\n                <ErrorMessage name=\"name\" />\n              </ErrorNote>\n            </Label>\n            <Label>\n              Number\n              <ContactInput\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"+380...\"\n                required\n              />\n              <ErrorNote>\n                <ErrorMessage name=\"number\" />\n              </ErrorNote>\n            </Label>\n          </div>\n          <AddButton type=\"submit\">Add contact</AddButton>\n        </FormAdd>\n      )}\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Please wait...'}</div>\n      <ContactList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectContactsFilter","filter","selectIsLoading","isLoading","ContactWrapper","styled","ContactName","ContactNumber","DeleteButton","ContactListItem","name","number","id","dispatch","useDispatch","onClick","deleteContacts","ContactList","useSelector","filterValue","toLowerCase","trim","visibleContacts","contact","includes","sort","a","b","localeCompare","map","FilterLabel","FilterInput","Filter","type","onChange","e","setContactsFilter","target","value","FormAdd","Form","Label","ContactInput","Field","AddButton","ErrorNote","ContactForm","UserSchema","yup","shape","min","max","required","initialValues","onSubmit","values","resetForm","addContact","validationSchema","props","autoComplete","pattern","title","placeholder","useEffect","fetchContacts"],"sourceRoot":""}